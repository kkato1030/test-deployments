name: Block merge

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  deployment_status:

jobs:
  block-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Check Deployment status (triggered by PR)
        id: check-deployment-status-pr
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ENDPOINT_URL="${{ github.api_url }}/repos/${{ github.repository }}/deployments"
          statuses_url=$(curl -s -X GET \
                              -H "Accept: application/vnd.github+json" \
                              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"      \
                              -H "X-GitHub-Api-Version: 2022-11-28"    \
                              "$ENDPOINT_URL?sha=${{ github.event.pull_request.head.sha }}" | jq -r '.[0].statuses_url')
          if echo "$statuses_url" | grep -q $ENDPOINT_URL; then
            echo '[INFO] related deployment is found.'
          else
            echo '[ERROR] related deployment is not found.'
            exit 1
          fi
          status=$(curl -s -X GET \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"      \
                        -H "X-GitHub-Api-Version: 2022-11-28"    \
                        "$statuses_url?per_page=1" | jq -r '.[0].state')
          if [ "$status" == 'success' ] || [ "$status" == 'inactive' ]; then
            echo '[INFO] related deployment status is ${status}.'
            exit 0
          else
            echo '[ERROR] related deployment status is not in [active, inactive].'
            exit 1
          fi
        continue-on-error: true

      - name: Check deployment status (triggered by Deployment status)
        id: check-deployment-status-event
        if: ${{ github.event_name == 'deployment_status' }}
        run: |
          status=${{ github.event.deployment_status.state }}
          if [ "$status" == 'success' ]; then
            echo '[INFO] related deployment status is ${status}.'
            exit 0
          else
            echo '[ERROR] related deployment status is not success.'
            exit 1
          fi
        continue-on-error: true

      - name: Update workflow status
        id: update-workflow-status
        if: ${{ always() }}
        run: |
          if [ ${{ steps.check-deployment-status-pr.outcome }} == 'success' ]
          || [ ${{ steps.check-deployment-status-event.outcome }} == 'success' ]; then
            exit 0
          else
            exit 1
          fi